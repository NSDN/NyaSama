apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId 'com.nyasama'
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 2
        versionName 'public-200424'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    productFlavors {
    }
    sourceSets {
        main {
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }
    useLibrary 'org.apache.http.legacy'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

task copyAndroidNatives() {
    file("libs/armeabi/").mkdirs()
    file("libs/armeabi-v7a/").mkdirs()
    file("libs/arm64-v8a/").mkdirs()
    file("libs/x86_64/").mkdirs()
    file("libs/x86/").mkdirs()

    configurations.natives.files.each { jar ->
        def outputDir = null
        if(jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
        if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
        if(jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
        if(jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
        if(jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
        if(outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.github.xuexiangjys:XUI:1.0.9-support'

    implementation "com.android.support:appcompat-v7:$supportLib"
    implementation "com.android.support:design:$supportLib"
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation "com.android.support:support-v4:$supportLib"
    implementation "com.android.support:cardview-v7:$supportLib"
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    // adding this dependency causes gradle problem
    // REF: http://stackoverflow.com/questions/20673888/duplicate-files-copied-android-studio-0-4-0
    implementation 'org.apache.httpcomponents:httpmime:4.5.6'
    implementation 'com.etsy.android.grid:library:1.0.5'
    implementation 'com.jakewharton:disklrucache:2.0.2'
    implementation 'ch.acra:acra:4.9.2'
}
